{"version":3,"sources":["components/Toolbar.js","components/Item.js","components/StorePage.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Toolbar","className","AppBar","style","color","Grid","container","spacing","item","xs","to","Component","Item","props","updateAmount","a","amo","target","value","setState","amount","amoutOf","state","status","toCart","showMe","cardC","cardA","TextField","type","id","label","onChange","Fragment","Button","size","onClick","price","Card","CardMedia","image","picture","CardContent","name","CardActions","this","StorePage","passToCart","tempAmount","tempItem","temp","amountofItem","itemDetails","oneItemToCart","console","log","allItems","Container","maxWidth","map","element","key","Cart","deleteItem","delete","funcToSum","cart","sum","length","i","updateName","n","Name","updateNumber","PN","number","Number","saveOrder","Order","allCart","Axios","post","then","res","addedItem","allItemsOnCart","totalPrice","newCart","sumup","Table","TableHead","TableRow","TableCell","fontWeight","TableBody","total","toFixed","placeholder","App","updateCart","tempI","tempA","currentItem","product","newCartItems","all","filter","sumOfAllCart","exact","path","itemAmount","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.87c22177.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Link} from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\n\r\n\r\n\r\n\r\nexport default class Toolbar extends Component {\r\n    render() {\r\n        return (\r\n            <div  className=\"toolbarbackground\" >\r\n                    <AppBar style={{color:\"white\"}}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs><Link to =\"/cart\"><ShoppingCartIcon className=\"shoppingCartIcon\">ShoppingCart</ShoppingCartIcon></Link>\r\n                        </Grid>\r\n                        <Grid className=\"name\" item xs={8}><Link className=\"linkintoolbar\" to =\"/\"><h4 className=\"toolbarStyle\" >  השוק שלי</h4></Link>\r\n                        </Grid>\r\n                        <Grid item xs></Grid>\r\n                        </Grid>\r\n                    </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default class Item extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             status:false,\r\n             amount:\"\",\r\n             item:props.item\r\n        }\r\n    }\r\n\r\n    updateAmount=(a)=>{\r\n        var amo = a.target.value\r\n        this.setState({amount:amo})\r\n    }\r\n\r\n    amoutOf=()=>{\r\n        if (!this.state.status) {\r\n            this.setState({status:true})\r\n        }else{\r\n            this.setState({status:false})\r\n            this.props.toCart(this.state.item, this.state.amount)\r\n        }\r\n    }\r\n    showMe=()=>{\r\n        let cardC = '';   \r\n        let cardA = '';  \r\n        if (!this.state.status) {\r\n            cardC = (<React.Fragment>\r\n                מחיר לקילו \r\n                <br/> {this.props.item.price} \r\n                <br/>  ש\"ח\r\n                </React.Fragment>); \r\n            cardA = (\r\n                <Button size=\"small\" onClick={this.amoutOf} color=\"primary\">\r\n                הוסף לעגלה\r\n                </Button>);\r\n        }else {\r\n            cardC = <div>\r\n            <span className=\"edit\">כמות</span><br/>\r\n              <TextField type=\"number\" id=\"standard-basic\" label=\"קילו\" onChange={this.updateAmount}/>\r\n            </div>;\r\n            cardA = (\r\n                <React.Fragment>\r\n                <Button size=\"small\" color=\"primary\">\r\n                חזור\r\n                </Button>\r\n                <Button size=\"small\" onClick={this.amoutOf} color=\"primary\">\r\n                הוסף\r\n                </Button></React.Fragment>);\r\n        }\r\n\r\n        return <Card  className=\"eachItem\">\r\n                    <CardMedia image={this.props.item.picture} style={{'height': '100px'}}>\r\n                    </CardMedia>\r\n                    <CardContent style={{'textAlign': 'right'}}>\r\n                    <span className=\"itemnamestyle\" style={{'fontFamily': 'Arial', 'fontWeight': '700', 'fontSize': '20px'}}>\r\n                        {this.props.item.name}\r\n                    </span>\r\n                    <br/>\r\n                    {cardC}\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        {cardA}\r\n                    </CardActions>\r\n                    </Card>\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"eachItem\">\r\n                    {this.showMe()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Item from './Item';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class StorePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            allItems:[{id:\"2\", name:\"לימונים\", price:\"5.9\", picture:\"./lemons.jpg\"},\r\n            {id:\"3\", name:\"תפוזים\", price:\"4.9\", picture: \"oranges.jpg\"},\r\n            {id:\"4\", name:\"עגבניות\", price:\"7.9\", picture: \"tomatos.jpg\"},\r\n            {id:\"5\", name:\"מלפפון\", price:\"6.5\", picture: \"cuecumber.jpg\"},\r\n            {id:\"6\", name:\"בצל\", price:\"6.9\", picture: \"onion.jpg\"},\r\n            {id:\"7\", name:\"תפוח אדמה לבן\", price:\"3.9\", picture: \"white-potato.jpg\"},\r\n            {id:\"8\", name:\"תתפוח אדמה אדום\", price:\"4.9\", picture: \"red-potato.jpg\"},\r\n            {id:\"9\", name:\"חציל\", price:\"7.5\", picture: \"hatsil.jpg\"},\r\n            {id:\"10\", name:\"דלעת\", price:\"8.5\", picture: \"bananas.jpg\"},\r\n            {id:\"11\", name:\"שומר\", price:\"5.9\", picture: \"bananas.jpg\"},\r\n            {id:\"12\", name:\"סלק\", price:\"5.9\", picture: \"bananas.jpg\"},\r\n            {id:\"13\", name:\"קולורבי\", price:\"5.9\", picture: \"bananas.jpg\"},\r\n            {id:\"14\", name:\"שרי\", price:\"7.9\", picture: \"bananas.jpg\"},\r\n            {id:\"15\", name:\"גמבה אדומה\", price:\"8.5\", picture: \"bananas.jpg\"},\r\n            {id:\"16\", name:\"אבטיח\", price:\"8.9\", picture: \"bananas.jpg\"},\r\n            {id:\"17\", name:\"מלון\", price:\"9.9\", picture: \"bananas.jpg\"},\r\n            {id:\"18\", name:\"שום\", price:\"7.9\", picture: \"bananas.jpg\"},\r\n            {id:\"19\", name:\"קלמנטינה\", price:\"5.9\", picture: \"bananas.jpg\"},\r\n            {id:\"20\", name:\"פומלית\", price:\"4.9\", picture: \"bananas.jpg\"},\r\n            {id:\"21\", name:\"אשכולית לבנה\", price:\"4.9\", picture: \"bananas.jpg\"},\r\n            {id:\"22\", name:\"תפוז סיני\", price:\"7.9\", picture: \"bananas.jpg\"},\r\n            {id:\"23\", name:\"פטרוזיליה\", price:\"4\", picture: \"bananas.jpg\"},\r\n            {id:\"24\", name:\"כוסברה\", price:\"4\", picture: \"bananas.jpg\"},\r\n            {id:\"25\", name:\"נענע\", price:\"4\", picture: \"bananas.jpg\"},\r\n            {id:\"26\", name:\"שמיר\", price:\"4\", picture: \"bananas.jpg\"},\r\n            {id:\"27\", name:\"בצל ירוק\", price:\"4\", picture: \"bananas.jpg\"},\r\n            {id:\"28\", name:\"חסה\", price:\"4\", picture: \"bananas.jpg\"},\r\n            {id:\"29\", name:\"סלרי\", price:\"4\", picture: \"bananas.jpg\"},\r\n            {id:\"30\", name:\"עלי סלק\", price:\"4\", picture: \"bananas.jpg\"},\r\n            {id:\"31\", name:\"כרוב לבן \", price:\"10\", picture: \"bananas.jpg\"},\r\n            {id:\"32\", name:\"כרוב אדום\", price:\"10\", picture: \"bananas.jpg\"},\r\n            {id:\"33\", name:\"כרוב לבן קצוץ\", price:\"12\", picture: \"bananas.jpg\"},\r\n            {id:\"34\", name:\"כרוב אדום קצוץ\", price:\"12\", picture: \"bananas.jpg\"},\r\n            {id:\"35\", name:\"קולסלו\", price:\"12\", picture: \"bananas.jpg\"},\r\n            {id:\"36\", name:\"גזר מגורד\", price:\"12\", picture: \"bananas.jpg\"},\r\n            {id:\"37\", name:\"חסה אייסברג\", price:\"15\", picture: \"bananas.jpg\"},\r\n            {id:\"38\", name:\"לקט(חסה,כרוב אדום, גזר)\", price:\"15\", picture: \"bananas.jpg\"},],\r\n             temp:[]\r\n        }\r\n    }\r\n\r\n    passToCart=(item,amount)=>{\r\n        let tempAmount=amount\r\n        let tempItem=item\r\n        let temp=[{amountofItem:amount} , {itemDetails:item}]\r\n        this.props.oneItemToCart(tempItem,tempAmount)\r\n        console.log(temp);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"storediv\">\r\n\r\n                <Container maxWidth=\"sm\">\r\n                 <Grid  container spacing={3}>\r\n                {this.state.allItems.map((element,key)=>{\r\n                     return  <Grid className=\"itemBrake\" key={element.id} item xs={6}>\r\n                     <Item toCart={this.passToCart} item={element}/>\r\n                     </Grid>\r\n                    \r\n\r\n                })}\r\n                </Grid>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Table from '@material-ui/core/Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\n\r\nexport default class Cart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             item:props.addedItem,\r\n             allCart:props.allItemsOnCart,\r\n             totalPrice:\"\",\r\n             newCart:[]\r\n        }\r\n    }\r\n\r\n    deleteItem=(id)=>{\r\n        this.props.delete(id)\r\n    }\r\n\r\n    funcToSum=(cart)=>{\r\n        console.log(cart);\r\n        var sum=0\r\n        var size= cart.length\r\n        for(let i = 0 ; i < size; i++){\r\n         sum= sum + cart[i].tempItem.price * cart[i].tempAmount\r\n        } \r\n        console.log(sum);\r\n        return sum\r\n    }\r\n\r\n    updateName=(n)=>{\r\n        let name= n.target.value\r\n        this.setState({Name:name})\r\n    }\r\n\r\n    updateNumber=(PN)=>{\r\n        let number= PN.target.value\r\n        this.setState({Number:number})\r\n    }\r\n\r\n    saveOrder=()=>{\r\n        let cart=this.state.allCart\r\n        let name= this.state.Name\r\n        let number= this.state.Number\r\n        let Order = {Cart:cart,Name: name,Number: number}\r\n        console.log(Order);\r\n        Axios.post(\"https:murmuring-hamlet-58919.herokuapp.com/order\",Order).then(res=>{\r\n            console.log(res);\r\n            \r\n        })\r\n        \r\n    }\r\n    \r\n    render() {\r\n        console.log(this.state.totalPrice);\r\n      let sumup=  this.funcToSum(this.props.allItemsOnCart)\r\n\r\n        return (<div>\r\n                <Table className=\"cartDiv\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{fontWeight:600}}>מוצר</span>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                            <span style={{fontWeight:600}}>כמות</span>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                            <span style={{fontWeight:600}}>מחיר</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        \r\n                            {this.props.allItemsOnCart.map((element, key)=>{\r\n                                var total = element.tempAmount*element.tempItem.price\r\n                                \r\n                                return <TableRow key={element.tempItem.id}>\r\n                                    <TableCell>\r\n                                        {element.tempItem.name}\r\n                                 </TableCell>\r\n                                 <TableCell>\r\n                                     {element.tempAmount}\r\n                                 </TableCell>\r\n                                 <TableCell>\r\n                                     {total.toFixed(2)}\r\n                                 </TableCell>\r\n                                 <TableCell>\r\n                                     <DeleteForeverIcon onClick={()=>this.deleteItem(element.tempItem.id)}>DeleteForever</DeleteForeverIcon>\r\n                                 </TableCell>\r\n                                </TableRow>\r\n                            })}\r\n                            \r\n                               <TableRow>\r\n                                   <TableCell>\r\n                                 {sumup.toFixed(2)} :סה\"כ\r\n                               </TableCell>\r\n                                </TableRow>    \r\n                    </TableBody>\r\n                </Table>\r\n              <input onChange={this.updateName} type=\"text\" placeholder=\"שם מלא\"/><br/><br/>\r\n              <input onChange={this.updateNumber} type=\"number\" placeholder=\"מספר טלפון\"/><br/><br/>\r\n              <Button onClick={this.saveOrder}>בצע הזמנה</Button>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Toolbar from './components/Toolbar.js';\r\nimport './App.css';\r\nimport {HashRouter as Router , Route , Switch} from 'react-router-dom';\r\nimport StorePage from './components/StorePage.js';\r\nimport Cart from './components/Cart.js';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       tempItem:\"\",\r\n       tempAmount:\"\",\r\n       allCart:[],\r\n       totalPrice:0,\r\n       sumOfAllCart:\"\"\r\n    }\r\n  }\r\n\r\n  updateCart=(tempI, tempA)=>{\r\n    let currentItem= {tempItem:tempI,tempAmount:tempA}\r\n    this.setState({allCart:[...this.state.allCart,currentItem]})    \r\n  }\r\n\r\n  deleteItem=(id)=>{\r\n    this.state.allCart.map((product)=>{\r\n      var all = this.state.allCart\r\n      var newCartItems\r\n      if (id === product.tempItem.id) {\r\n          return<div>\r\n              {newCartItems=all.filter((item)=>{\r\n                 return item !== product\r\n              })}\r\n              {this.setState({allCart:newCartItems})}\r\n              </div>\r\n      }\r\n      \r\n  })\r\n\r\n  }\r\n\r\n \r\n  \r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <Router>\r\n        <Toolbar/>\r\n          <Switch>\r\n\r\n            <Route exact path = \"/\">\r\n            <StorePage oneItemToCart={this.updateCart}/>\r\n            </Route>\r\n            <Route exact path =\"/cart\">\r\n            <Cart sum={this.state.sumOfAllCart} delete={this.deleteItem} allItemsOnCart={this.state.allCart} itemAmount={this.state.tempAmount} addedItem={this.state.tempItem}/>\r\n            </Route>\r\n\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}